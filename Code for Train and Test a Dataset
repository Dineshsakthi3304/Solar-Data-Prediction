import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, r2_score
import matplotlib.pyplot as plt
import seaborn as sns

# Load dataset
data = pd.read_csv('C:\solar\solar_data_sample.csv')

# Features and Target
X = data[['Temperature', 'Humidity', 'CloudCover']]
y = data['SolarOutput']

# Split data into training and testing sets (80% Train, 20% Test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model: Random Forest Regressor
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Predict
predictions = model.predict(X_test)

# Evaluation
mae = mean_absolute_error(y_test, predictions)
r2 = r2_score(y_test, predictions)

print(f"Mean Absolute Error: {mae}")
print(f"R2 Score: {r2}")

# Visualization: Actual vs Predicted
plt.figure(figsize=(10,6))
sns.lineplot(x=range(len(y_test)), y=y_test.values, label='Actual', marker='o')
sns.lineplot(x=range(len(y_test)), y=predictions, label='Predicted', marker='x')
plt.title('Solar Energy Prediction - Actual vs Predicted')
plt.xlabel('Sample')
plt.ylabel('Solar Output (kWh)')
plt.legend()
plt.show()
